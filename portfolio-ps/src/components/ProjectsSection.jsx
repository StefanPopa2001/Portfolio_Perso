import { Box, Container, Typography, Grid, Paper, Chip, IconButton } from '@mui/material'
import { useTheme } from '@mui/material/styles'
import { useState } from 'react'
import ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'
import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'
import GitHubIcon from '@mui/icons-material/GitHub'
import LanguageIcon from '@mui/icons-material/Language'
import WorkIcon from '@mui/icons-material/Work'
import SchoolIcon from '@mui/icons-material/School'

export function ProjectsSection() {
  const theme = useTheme()
  const isDark = theme.palette.mode === 'dark'

  const projects = [
    {
      title: 'Rudy et Fanny',
      type: 'professional', // professional or school
      description: 'A food delivery and ordering website for a small restaurant. This project allowed me to improve my react knowledge, deploy something in production with docker on a linux vps, handle cybersecutiry, RGPD, ... The main lessons taken here were really deploying something from sractsh, understanding and talking with a client that has no kownledge of IT, make a website emant for customers, with all the ergonomy and ease of access required. As of today this project is used in production in small scale in order for the restaurant to fully get acquited with the system and later it will be used at a bigger scale and include online payments. Since this app is meant to be used on phone, responsivness was at the heart of this porject design. At the beggining of the project, I was greatly helped by my collegue and friend Louis BOutry that helped me immensesely with understanding the linux envrionement and its intriquices when it comes to server deployement and cyberpsecutriy.',
      techStack: ["React", "Node.js", "Express JS", "PostgreSQL", "Prisma", "Docker", "Docker Compose", "JWT", "Socket.io", "Nginx", "Material-UI","Bcrypt", "Multer", "Sharp", "Traefik", "pgAdmin", "Crypto-js", "Jest", "Web Vitals","Javascript","Typescript"],
      githubUrl: 'https://github.com/StefanPopa2001/RF-Food-Delivery-App',
      liveUrl: 'https://rudyetfanny.be',
      images: ["public/images/rf_carousel_1.png", "public/images/rf_carousel_2.png", "public/images/rf_carousel_3.png"]
    },
    {   
      title: 'Logiscool Mons Intranet 3',
      type: 'professional', // professional or school
      description: 'Logiscool Mons Intranet 3 is a web platform CRM desgined by mesure for the needs of LOgiscool Mons. It invilves database handling, excel files import with diffrence by diffrence change, full secure auth system, a drive for files, dynamic field generated by the admin settings, a dashbaord for stats, a system for reattribuing cours to students missing htem easisly, a mailing system, an automatic facturaiton system, attendance tracking. LMI33 is doing everything LMI2 was doign but on a flexible paltform.',
      techStack: ['React', 'Node.js', 'MongoDB', 'Express', 'Socket.io'],
      githubUrl: 'https://github.com/StefanPopa2001/LMI-3',
      liveUrl: '',
      images: [
        "public/images/lmi3_carousel_1.png",
        "public/images/lmi3_carousel_2.png",
        "public/images/lmi3_carousel_3.png"
      ]
    },
    {
      title: "Les Amitiés Françaises de Mons conférences",
      type: 'professional', // professional or school
      description: 'A simple vitrine website build in HTML/CSS/JS and deployed with Google Firebase. This website was built benevoleley for Mr Adrian Freanua, the president of the association Les amities fracnaises de mons. This project is important to me beause it was the first time I built somehting for the google referecing system. This wesbite was built to be hosted for free, and automatically update itself to avoid regult maintenances. THe free hosting porposed by firebase, and the automatically updating elements were greatly apprciated.',
      techStack: ['HTML', 'CSS', 'JavaScript', 'Google Firebase'],
      githubUrl: 'https://github.com/StefanPopa2001/Amiti-s-FR',
      liveUrl: 'https://les-amities-francaises-de-mons.web.app/',
      images: ["public/images/afr_carousel_1.png","public/images/afr_carousel_2.png","public/images/afr_carousel_3.png"]
    },
    {
      title: 'Logiscool Mons Intranet 2',
      type: 'professional', 
      description: 'An office 365 suite solution for Code it Bryan. ',
      techStack: ['Power apps', 'Power automate', 'Microsoft database','Sharepoint'],
      githubUrl: '',
      liveUrl: '',
      images: ['']
    },
    {
      title: 'LMI 1',
      type: 'professional', // professional or school
      description: 'Logiscool Mons Intranet 1 is the first itteration at an attempt at building a CRM to handle the main tasks required to run Logiscool. This project has been put in hiatus since LMI 2 since the partnership ',
      techStack: ['React', 'C#', 'Entity Framework', 'MySQL'],
      githubUrl: 'https://github.com/your-username/lmi1',
      liveUrl: 'https://lmi1.example.com',
      images: ['https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=400&h=300&fit=crop']
    },
    {
      title: 'Small brother',
      type: 'school',
      description: 'School project at HELHa Mons. Developped with my collegues Pascal Vandmalderen and Thibeaut x. A full stack application for finding and signalining lost animals as a website and mobile app written in kotlin',
      techStack: ['Angular', 'C#', 'Entity Framework','Kotlin', 'OOP', 'MySQL'],
      githubUrl: '',
      liveUrl: '',
      images: ['']
    },
    {
      title: 'Frog-GER',
      type: 'school',
      description: 'School project at HELHa Mons. Developped with my collegues Mathis Bruyère, Florian Blanchez and Fabio Divito. A graphic game built in C with SFML with manual memory handling.',
      techStack: ['C', 'SFML'],
      githubUrl: 'https://github.com/StefanPopa2001/FroggerSFML',
      liveUrl: '',
      images: ['']
    },
    {
      title: 'Joker-Quizz',
      type: 'school',
      description: 'School project at HELHA Mons. Developped with my collegues Mathis Bruyère and Florian Blanchez. A graphic board game featuring animations, multiplayer, and a focus on the principles of clean code and programmation design patterns.',
      techStack: ['Java', 'Java FX','OOP'],
      githubUrl: 'https://github.com/your-username/joker-quizz',
      liveUrl: 'https://jokerquizz.example.com',
      images: ['https://images.unsplash.com/photo-1515879218367-8466d910aaa4?w=400&h=300&fit=crop']
    },
    {
      title: 'Pyscript WEB IP',
      type: 'school',
      description: 'A PyScript-powered web tool for IP administration (range calculator, sub network). The tool is meant to help handle a network.',
      techStack: ['PyScript', 'HTML', 'JavaScript','CSS'],
      githubUrl: 'https://github.com/StefanPopa2001/PyscriptWebIP',
      liveUrl: '',
      images: ['']
    }
  ]

  const ImageCarousel = ({ images }) => {
    const [currentIndex, setCurrentIndex] = useState(0)

    const nextImage = () => {
      setCurrentIndex((prev) => (prev + 1) % images.length)
    }

    const prevImage = () => {
      setCurrentIndex((prev) => (prev - 1 + images.length) % images.length)
    }

    return (
      <Box sx={{ position: 'relative', width: '100%', height: 200, overflow: 'hidden' }}>
        <Box
          component="img"
          src={images[currentIndex]}
          alt="Project screenshot"
          sx={{
            width: '100%',
            height: '100%',
            objectFit: 'cover',
            borderRadius: 1,
          }}
        />
        {images.length > 1 && (
          <>
            <IconButton
              onClick={prevImage}
              sx={{
                position: 'absolute',
                left: 8,
                top: '50%',
                transform: 'translateY(-50%)',
                color: 'white',
                backgroundColor: 'rgba(0,0,0,0.5)',
                '&:hover': { backgroundColor: 'rgba(0,0,0,0.7)' },
              }}
            >
              <ArrowBackIosIcon />
            </IconButton>
            <IconButton
              onClick={nextImage}
              sx={{
                position: 'absolute',
                right: 8,
                top: '50%',
                transform: 'translateY(-50%)',
                color: 'white',
                backgroundColor: 'rgba(0,0,0,0.5)',
                '&:hover': { backgroundColor: 'rgba(0,0,0,0.7)' },
              }}
            >
              <ArrowForwardIosIcon />
            </IconButton>
            <Box sx={{ position: 'absolute', bottom: 8, left: '50%', transform: 'translateX(-50%)', display: 'flex', gap: 0.5 }}>
              {images.map((_, index) => (
                <Box
                  key={index}
                  sx={{
                    width: 8,
                    height: 8,
                    borderRadius: '50%',
                    backgroundColor: index === currentIndex ? 'white' : 'rgba(255,255,255,0.5)',
                  }}
                />
              ))}
            </Box>
          </>
        )}
      </Box>
    )
  }

  return (
    <Box
      id="projects"
      sx={{
        paddingY: 8,
        background: isDark ? 'rgba(255, 255, 255, 0.02)' : 'rgba(0, 0, 0, 0.02)',
      }}
    >
      <Container maxWidth="lg">
        <Typography
          variant="h3"
          sx={{
            fontWeight: 800,
            marginBottom: 4,
            color: isDark ? '#ffffff' : '#000000',
            textAlign: 'center',
          }}
        >
          Projects
        </Typography>

        <Grid container spacing={4} sx={{ alignItems: 'stretch' }}>
          {projects.map((project, index) => (
            <Grid item xs={12} sm={6} md={6} key={index} sx={{ display: 'flex', width: '100%' }}>
              <Paper
                elevation={0}
                sx={{
                  width: '100%',
                  boxSizing: 'border-box',
                  padding: 3,
                  backgroundColor: isDark ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.02)',
                  border: `1px solid ${isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'}`,
                  borderRadius: 2,
                  transition: 'all 0.3s ease',
                  display: 'flex',
                  flexDirection: { xs: 'column', sm: 'row' },
                  alignItems: 'flex-start',
                  gap: 2,
                  flex: 1,
                  height: '100%',
                  minHeight: { xs: 'auto', md: 320 },
                  '&:hover': {
                    backgroundColor: isDark ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.04)',
                    borderColor: isDark ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)',
                  },
                }}
              >
                {/* Only show image carousel for professional projects */}
                {project.type === 'professional' && (
                  <Box sx={{ flex: '0 0 25%', maxWidth: { xs: '100%', sm: '25%' }, mb: { xs: 2, sm: 0 }, flexShrink: 0 }}>
                    <ImageCarousel images={project.images} />
                  </Box>
                )}

                <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>
                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', gap: 1, mb: 2 }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                      {/* Show icon based on project type */}
                      {project.type === 'professional' ? (
                        <WorkIcon sx={{ color: isDark ? '#90caf9' : '#1976d2', fontSize: 28 }} />
                      ) : (
                        <SchoolIcon sx={{ color: isDark ? '#81c784' : '#388e3c', fontSize: 28 }} />
                      )}
                      <Typography
                        variant="h5"
                        sx={{
                          fontWeight: 700,
                          color: isDark ? '#ffffff' : '#000000',
                        }}
                      >
                        {project.title}
                      </Typography>
                    </Box>
                    <Box sx={{ display: 'flex', gap: 1 }}>
                      {project.liveUrl ? (
                        <IconButton
                          component="a"
                          href={project.liveUrl}
                          target="_blank"
                          rel="noopener noreferrer"
                          aria-label={`${project.title} live site`}
                          sx={{
                            backgroundColor: isDark ? 'rgba(255,255,255,0.04)' : 'rgba(0,0,0,0.04)',
                            color: isDark ? '#ffffff' : '#000000',
                            '&:hover': { backgroundColor: isDark ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.08)' },
                          }}
                        >
                          <LanguageIcon />
                        </IconButton>
                      ) : (
                        <IconButton disabled aria-label="live site not available" sx={{ opacity: 0.4 }}>
                          <LanguageIcon />
                        </IconButton>
                      )}

                      {project.githubUrl ? (
                        <IconButton
                          component="a"
                          href={project.githubUrl}
                          target="_blank"
                          rel="noopener noreferrer"
                          aria-label={`${project.title} GitHub repository`}
                          sx={{
                            backgroundColor: isDark ? 'rgba(255,255,255,0.04)' : 'rgba(0,0,0,0.04)',
                            color: isDark ? '#ffffff' : '#000000',
                            '&:hover': { backgroundColor: isDark ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.08)' },
                          }}
                        >
                          <GitHubIcon />
                        </IconButton>
                      ) : (
                        <IconButton disabled aria-label="GitHub not available" sx={{ opacity: 0.4 }}>
                          <GitHubIcon />
                        </IconButton>
                      )}
                    </Box>
                  </Box>
                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, marginBottom: 2 }}>
                    {project.techStack.map((tech, techIndex) => (
                      <Chip
                        key={techIndex}
                        label={tech}
                        size="small"
                        sx={{
                          backgroundColor: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',
                          color: isDark ? '#ffffff' : '#000000',
                        }}
                      />
                    ))}
                  </Box>
                  <Typography
                    variant="body1"
                    sx={{
                      color: isDark ? '#d0d0d0' : '#333333',
                      lineHeight: 1.6,
                    }}
                  >
                    {project.description}
                  </Typography>
                </Box>
              </Paper>
            </Grid>
          ))}
        </Grid>
      </Container>
    </Box>
  )
}